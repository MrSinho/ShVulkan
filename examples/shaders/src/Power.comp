#version 450

#define INVOCATION_X_COUNT 64
#define INVOCATION_Y_COUNT 1
#define INVOCATION_Z_COUNT 1

//
//TOTAL OF 64 * 1 * 1 PARALLEL INVOCATIONS/THREADS = 64
//
layout (
    local_size_x = INVOCATION_X_COUNT, //size of x workgroup
    local_size_y = INVOCATION_Y_COUNT, //size of y workgroup
    local_size_z = INVOCATION_Z_COUNT  //size of z workgroup
) in;

layout(std430, set = 0, binding = 0) buffer _src {
   float values[];
} src;

layout(std430, set = 1, binding = 0) buffer _test {
    float factor;
} test;

void main() {

    //the invocation id is the computational unit index
    uint input_id = gl_GlobalInvocationID.x;

    float val = src.values[input_id];    
    src.values[input_id] = pow(val, 2) * test.factor;
}